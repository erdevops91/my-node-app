steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', '-t',
      'asia-southeast2-docker.pkg.dev/carbay-indo/my-docker-repo/my-node-app:latest',
      '.'
    ]

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'asia-southeast2-docker.pkg.dev/carbay-indo/my-docker-repo/my-node-app:latest'
    ]

  # Step 3: Authenticate to GKE
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials stage-cluster --region asia-southeast2 --project carbay-indo

  # Step 4: Apply Kubernetes manifests
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        kubectl apply -f k8s/ --namespace=stage-id

  # âœ… Step 5: Rollout restart to make sure the new image is picked up
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        kubectl rollout restart deployment/my-node-app --namespace=stage-id

images:
  - 'asia-southeast2-docker.pkg.dev/carbay-indo/my-docker-repo/my-node-app:latest'

options:
  logging: CLOUD_LOGGING_ONLY

